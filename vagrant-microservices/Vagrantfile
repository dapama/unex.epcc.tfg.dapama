# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'
settings = YAML.load_file 'vagrant.yml'

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure( settings[ 'vagrantfile_api_version' ] ) do | config |

  config.vm.box = settings[ 'vagrant_box' ]
  config.vm.network :private_network, ip: settings[ 'ip_address' ]
  config.vm.hostname = settings[ 'vm_hostname' ]
  
  config.ssh.insert_key = false
  config.vm.synced_folder '../vagrant-microservices/', '/srv/vagrant-microservices/', id: 'microservices'
  # config.vm.synced_folder '../ftp-service/', '/srv/ftp-service/', id: 'ftp-service'

  config.vm.provider 'virtualbox' do | v |
    v.name = settings[ 'vm_name' ]
    v.memory = settings[ 'vm_memory' ]
    v.cpus = settings[ 'vm_cpu_count' ]
  end
  
  config.vm.provision 'ansible_local' do | ansible |
    ansible.become = true
    ansible.playbook = 'ansible/site.yml'
    ansible.galaxy_role_file = 'ansible/requirements.yml'
    ansible.galaxy_roles_path = 'ansible/roles'
    ansible.galaxy_command = 'sudo ansible-galaxy install --role-file=%{role_file} --roles-path=%{roles_path} --force'
    # ansible.config_file = 'ansible/ansible.cfg'
    # ansible.install_mode = 'pip'
    ansible.extra_vars = {
        vagrant_ip_address: settings[ 'ip_address' ],
        ansible_ssh_user: 'vagrant',
        vagrant: true,
        zsh_user: 'vagrant'
    }
  end

end